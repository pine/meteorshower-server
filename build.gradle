buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        springSessionVersion = 'Bean-SR3'
        kotlinVersion = '1.3.21'
        jacksonVersion = '2.9.8'
        powermockVersion = '2.0.0'
    }
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE'
        classpath 'net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0'
    }
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        jcenter()
        maven { url 'https://repo.eclipse.org/content/groups/releases' }
        maven { url 'https://dl.bintray.com/pinemz/maven/' }
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.session:spring-session-bom:$springSessionVersion"
            mavenBom 'com.google.oauth-client:google-oauth-client-bom:1.28.0'
            mavenBom 'com.google.http-client:google-http-client-bom:1.28.0'
            mavenBom "org.jetbrains.kotlin:kotlin-bom:$kotlinVersion"
            mavenBom "com.fasterxml.jackson:jackson-bom:$jacksonVersion"
        }
        dependencies {
            dependency 'org.springframework.data:spring-data-redis:2.1.5.RELEASE'
            dependency 'org.eclipse.mylyn.github:org.eclipse.egit.github.core:5.3.0.201903130848-r'
            dependency 'com.google.code.gson:gson:2.8.5'
            dependency 'io.lettuce:lettuce-core:5.1.5.RELEASE'
            dependency 'com.google.guava:guava:27.1-jre'
            dependency 'moe.pine:heroku-addons:0.1.1'

            // Apache Commons
            dependency 'commons-codec:commons-codec:1.11'
            dependency 'org.apache.commons:commons-text:1.6'

            // MyBatis
            dependency 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
            dependency 'mysql:mysql-connector-java:8.0.15'

            // Test
            dependency 'junit:junit:4.12'
            dependency 'org.mockito:mockito-core:2.24.5'

            dependency "org.powermock:powermock-core:$powermockVersion"
            dependency "org.powermock:powermock-reflect:$powermockVersion"
            dependency "org.powermock:powermock-module-junit4:$powermockVersion"
            dependency "org.powermock:powermock-module-junit4-rule:$powermockVersion"
            dependency "org.powermock:powermock-api-mockito2:$powermockVersion"
        }
    }
    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
    }
}


// ----- Build Time Tracker -------------------------------

apply plugin: 'build-time-tracker'

buildtimetracker {
    reporters {
        summary {
            ordered true
            barstyle 'ascii'
        }
    }
}


// ----- Configuration ------------------------------------

def confFiles = fileTree('conf').include('**/*.yml', '**/*.json')
confFiles.forEach { File src ->
    def dest = new File(
        src.absolutePath.replace("${rootDir.absolutePath}/conf", rootDir.absolutePath))
    if (src.name.endsWith('.yml')) {
        dest.write("# This YAML source file was generated by the Gradle.\n\n")
    } else {
        dest.setBytes([] as byte[])
    }
    dest.append(src.readBytes())
}
